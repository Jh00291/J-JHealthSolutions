<Window x:Class="J_JHealthSolutions.Views.AddEditTestOrder"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:J_JHealthSolutions.Views"
        xmlns:model="clr-namespace:J_JHealthSolutions.Model"
        xmlns:viewmodel="clr-namespace:J_JHealthSolutions.ViewModel"
        mc:Ignorable="d"
        SizeToContent="WidthAndHeight"
        MinWidth="750" MinHeight="400"
        MaxWidth="950" MaxHeight="600"
        Title="AddEditTest" Height="450" Width="800">

    <Window.Resources>
        <model:EnumDescriptionConverter x:Key="EnumDescriptionConverter"/>

        <!-- Styles for validation error highlighting -->
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ComboBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DatePicker">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Window.DataContext>
        <viewmodel:AddEditTestOrderViewModel/>
    </Window.DataContext>

    <Grid Margin="10">
        <!-- Define Rows and Columns -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Test Dropdown -->
            <RowDefinition Height="Auto"/>
            <!-- Test Date -->
            <RowDefinition Height="Auto"/>
            <!-- Test Ordered By -->
            <RowDefinition Height="Auto"/>
            <!-- Test Performed DatePicker -->
            <RowDefinition Height="Auto"/>
            <!-- Result -->
            <RowDefinition Height="Auto"/>
            <!-- Buttons -->
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <!-- Labels -->
            <ColumnDefinition Width="6*"/>
            <!-- Input Controls -->
        </Grid.ColumnDefinitions>

        <!-- Test Dropdown -->
        <Label Grid.Row="0" Grid.Column="0" Content="Test:" VerticalAlignment="Center" Margin="5"/>
        <StackPanel Grid.Row="0" Grid.Column="1" Margin="5">
            <ComboBox x:Name="testComboBox"
                      ItemsSource="{Binding Tests}"
                      SelectedItem="{Binding SelectedTest, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding TestName}" Margin="5"/>
                            <TextBlock Text =" (TestCode: " Foreground="Gray" />
                            <TextBlock Text="{Binding TestCode}" Foreground="Gray"/>
                            <TextBlock Text=" Low Value: " Foreground="Gray"/>
                            <TextBlock Text="{Binding LowValue}" Foreground="Gray"/>
                            <TextBlock Text="{Binding Unit, Converter={StaticResource EnumDescriptionConverter}}" Foreground="Gray"/>
                            <TextBlock Text=" High Value: " Foreground="Gray"/>
                            <TextBlock Text="{Binding HighValue}" Foreground="Gray"/>
                            <TextBlock Text="{Binding Unit, Converter={StaticResource EnumDescriptionConverter}}" Foreground="Gray"/>
                            <TextBlock Text =" ) " Foreground="Gray" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock Foreground="Red" FontSize="12" 
                       Text="{Binding ElementName=testComboBox, Path=(Validation.Errors)[0].ErrorContent}"/>
        </StackPanel>

        <!-- Test Date -->
        <Label Grid.Row="1" Grid.Column="0" Content="Order Date:" VerticalAlignment="Center" Margin="5"/>
        <TextBlock Grid.Row="1" Grid.Column="1" Margin="5"
                   Text="{Binding TestDate, StringFormat='{}{0:G}'}"/>

        <!-- Test Ordered By -->
        <Label Grid.Row="2" Grid.Column="0" Content="Test Ordered By:" VerticalAlignment="Center" Margin="5"/>
        <TextBox x:Name="testOrderedByTextBox" Grid.Row="2" Grid.Column="1" Margin="5" IsEnabled="False" />

        <!-- Test Performed DatePicker -->
        <Label Content="Performed Date:" Grid.Row="3" Grid.Column="0" Margin="5" VerticalAlignment="Center"/>
        <DatePicker Grid.Row="3" Grid.Column="1" Margin="5"
                    SelectedDate="{Binding TestPerformedDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    DisplayDateStart="{Binding MinTestPerformedDate, Mode=OneWay}"
                    DisplayDateEnd="{Binding MaxTestPerformedDate, Mode=OneWay}"
                    FirstDayOfWeek="Monday"/>

        <!-- Result -->
        <Label Grid.Row="4" Grid.Column="0" Content="Result:" VerticalAlignment="Center" Margin="5"/>

        <!-- Grid for Result and Unit Of Measurement -->
        <Grid Grid.Row="4" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="12*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox x:Name="resultTextBox" Grid.Column="0" Grid.Row="0" Margin="5"
                     Text="{Binding Result, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     IsEnabled="{Binding IsResultEnabled}"/>           <Label x:Name="unitTextLabel" Grid.Column="1" Grid.Row="0" Margin="5" IsEnabled="False" Content="{Binding UnitOfMeasurement}"/>
            <TextBlock Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Foreground="Red" FontSize="12" 
                       Text="{Binding ElementName=resultTextBox, Path=(Validation.Errors)[0].ErrorContent}"/>
        </Grid>

        <!-- Buttons in a UniformGrid -->
        <UniformGrid Grid.Row="5" Grid.Column="1" Rows="1" Columns="2" HorizontalAlignment="Right" Margin="5">
            <Button x:Name="saveButton" Content="Save" Margin="5" Padding="2"
                    Click="SaveButton_Click"/>
            <Button x:Name="cancelButton" Content="Cancel" Margin="5" Padding="2"/>
        </UniformGrid>

    </Grid>
</Window>
